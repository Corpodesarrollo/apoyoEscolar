--INSERCION DE INSTITUCION
CREATE OR REPLACE TRIGGER TRG_duc_insertInstitucion AFTER INSERT ON CLG_COLEGIO
	FOR EACH ROW
	BEGIN
		 PK_INTEGRACIONduc1.insertColegio(:NEW.DANE12, :NEW.DANE11, :NEW.CODIGO, :NEW.PRM_LOC_CODIGO, :NEW.NOMBRE, :NEW.PRM_EST_CODIGO,:NEW.TIPO,:NEW.NUMERORESOLUCION, TO_CHAR(:NEW.FECHARESOLUCION,'dd/mm/yyyy'));
	END;
/

--SELECT * FROM user_errors

--PARA LA ACTUALIZACION DE INSTITUCION   
CREATE OR REPLACE TRIGGER TRG_updateInstitucion AFTER UPDATE OF
	   DANE12, DANE11, CODIGO, PRM_LOC_CODIGO, NOMBRE, PRM_EST_CODIGO,TIPO,NUMERORESOLUCION, FECHARESOLUCION	   
	   ON CLG_COLEGIO
	FOR EACH ROW
	BEGIN
		 PK_INTEGRACIONduc1.updateColegio(:OLD.DANE12, :OLD.DANE11, :NEW.DANE12, :NEW.DANE11, :NEW.CODIGO, :NEW.PRM_LOC_CODIGO, :NEW.NOMBRE, :NEW.PRM_EST_CODIGO,:NEW.TIPO,:NEW.NUMERORESOLUCION, TO_CHAR(:NEW.FECHARESOLUCION,'dd/mm/yyyy'));
	END;
/

--PARA LA ELIMINACION DE INSTITUCION   
CREATE OR REPLACE TRIGGER TRG_deleteInstitucion AFTER DELETE ON CLG_COLEGIO
	FOR EACH ROW
	BEGIN
	 	 PK_INTEGRACIONduc1.deleteColegio(:OLD.DANE12, :OLD.DANE11,:OLD.CODIGO);
	END;
/


--PARA LA INSERCION DE SEDE   
CREATE OR REPLACE TRIGGER TRG_insertSede AFTER INSERT ON SED_SEDE
	FOR EACH ROW
	BEGIN
		 PK_INTEGRACIONduc1.insertSede(:NEW.DANE12, :NEW.DANE11, :NEW.CLG_CLG_CODIGO, :NEW.CODIGO, :NEW.NOMBRE, :NEW.DIRECCION, :NEW.TELEFONO, :NEW.PRM_ETD_CODIGO);
		 /*
		INSERT INTO NOTAS_INTEGRACION (CATEGORIA, FUNCION, P1, P2, P3, P4, P5, P6, P7,ID) VALUES ( 
		2, 
		1, 
		:NEW.IN_CODI_ID,
		:NEW.IS_DANE_SEDE,
		CASE LENGTH(:NEW.IS_CONS_SEDE) WHEN 12 THEN (TO_NUMBER(SUBSTR(LPAD(:NEW.IS_CONS_SEDE,12,0),12,1))) WHEN 13 THEN (TO_NUMBER(SUBSTR(LPAD(:NEW.IS_CONS_SEDE,13,0),12,2))) END,
		:NEW.IS_NOMB,
		:NEW.IS_DIRE_SEDE, 
		:NEW.IS_TELE_SEDE, 
		:NEW.IS_ESTA_SEDE, 
		id_Notas_integracion.NEXTVAL);
		*/
	END;
/


--PARA LA ACTUALIZACION DE LA SEDE    
CREATE OR REPLACE TRIGGER TRG_updateSede AFTER UPDATE OF IN_CODI_ID,IS_DANE_SEDE,IS_CONS_SEDE,IS_NOMB,IS_ESTA_SEDE,IS_DIRE_SEDE,IS_TELE_SEDE ON INST_SEDE
	   FOR EACH ROW
	   BEGIN
		INSERT INTO NOTAS_INTEGRACION (CATEGORIA, FUNCION, P1, P2, P3, P4, P5, P6, P7, P8, P9, P10,ID) VALUES ( 
		2, 
		2, 
		:OLD.IN_CODI_ID,
		:NEW.IN_CODI_ID,
		:OLD.IS_DANE_SEDE,
		:NEW.IS_DANE_SEDE,
		CASE LENGTH(:OLD.IS_CONS_SEDE) WHEN 12 THEN (TO_NUMBER(SUBSTR(LPAD(:OLD.IS_CONS_SEDE,12,0),12,1))) WHEN 13 THEN (TO_NUMBER(SUBSTR(LPAD(:OLD.IS_CONS_SEDE,13,0),12,2))) END,
		CASE LENGTH(:NEW.IS_CONS_SEDE) WHEN 12 THEN (TO_NUMBER(SUBSTR(LPAD(:NEW.IS_CONS_SEDE,12,0),12,1))) WHEN 13 THEN (TO_NUMBER(SUBSTR(LPAD(:NEW.IS_CONS_SEDE,13,0),12,2))) END,
		:NEW.IS_NOMB,
		:NEW.IS_DIRE_SEDE, 
		:NEW.IS_TELE_SEDE, 
		:NEW.IS_ESTA_SEDE,		 
		id_Notas_integracion.NEXTVAL);
	   END;
/

--PARA LA ELIMINACION DE SEDE   
CREATE OR REPLACE TRIGGER TRG_deleteSede AFTER DELETE ON INST_SEDE
	FOR EACH ROW
	BEGIN
		INSERT INTO NOTAS_INTEGRACION (ID,CATEGORIA, FUNCION, P1, P2, P3) VALUES ( 
		id_Notas_integracion.NEXTVAL,
		2, 
		7, 
		:OLD.IN_CODI_ID,
		:OLD.IS_DANE_SEDE,
		CASE LENGTH(:OLD.IS_CONS_SEDE) WHEN 12 THEN (TO_NUMBER(SUBSTR(LPAD(:OLD.IS_CONS_SEDE,12,0),12,1))) WHEN 13 THEN (TO_NUMBER(SUBSTR(LPAD(:OLD.IS_CONS_SEDE,13,0),12,2))) END
		);
	END;
/
